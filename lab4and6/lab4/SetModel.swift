import UIKit
import ARKit
import SceneKit

class OrangeModel {
    
    public var controlButtons: [UIButton] = []
    public var currentTargetNode: SCNNode?
    
    func addModel(node: SCNNode) {
        // –ó–∞–≥—Ä—É–∑–∫–∞ 3D-–º–æ–¥–µ–ª–∏
        if let scene = SCNScene(named: "art.scnassets/orange.scn") {
            if let modelNode = scene.rootNode.childNode(withName: "orange", recursively: true) {
                
                // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –º–æ–¥–µ–ª—å
                let scaleFactor: Float = 0.025
                modelNode.scale = SCNVector3(scaleFactor, scaleFactor, scaleFactor)
                        
                // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è-—è–∫–æ—Ä—è
                modelNode.position = SCNVector3(0,0,scaleFactor * 2)
                modelNode.eulerAngles.x = -.pi / 2
                
                node.addChildNode(modelNode)
                
                let textNode = createTextNode(text: "Orange", position: SCNVector3(0, 0, 0.12))
                node.addChildNode(textNode)
                
                DispatchQueue.main.async {
                    self.addControlButtons(targetNode: modelNode)
                }
                
                currentTargetNode = modelNode
                
            } else {
                print("Error: Node with the specified name not found in the scene.")
            }
        } else {
            print("Error: Scene file not found.")
        }
    }
    
    func onModelTouch(node: SCNNode) {
        // –ü—É–ª—å—Å–∞—Ü–∏—è (—É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏ —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞)
        let scaleUp = SCNAction.scale(to: 0.027, duration: 0.2)
        let scaleDown = SCNAction.scale(to: 0.025, duration: 0.2)
        
        // –í—Ä–∞—â–µ–Ω–∏–µ
        let rotate = SCNAction.rotateBy(x: 0, y: 0, z: CGFloat.pi * 2, duration: 0.5)
        
        // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–π
        let pulseSequence = SCNAction.sequence([scaleUp, scaleDown])
        let fullAnimation = SCNAction.group([pulseSequence, rotate])
        
        // –î–µ–π—Å—Ç–≤–∏–µ —Å –æ—Ç–∫—Ä—ã—Ç–∏–µ–º —Å—Å—ã–ª–∫–∏
        let actionWithCompletion = SCNAction.run { _ in
            if let url = URL(string: "https://en.wikipedia.org/wiki/Orange_(fruit)") {
                UIApplication.shared.open(url)
            }
        }
        let finalAction = SCNAction.sequence([fullAnimation, actionWithCompletion])
        
        // –ó–∞–ø—É—Å–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ —É–∑–ª–∞
        node.runAction(finalAction)
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –Ω–æ–¥—ã
    func createTextNode(text: String, position: SCNVector3) -> SCNNode {
        let textGeometry = SCNText(string: text, extrusionDepth: 0.01)
        textGeometry.firstMaterial?.diffuse.contents = UIColor.white
        textGeometry.font = UIFont.systemFont(ofSize: 0.1)
        
        let textNode = SCNNode(geometry: textGeometry)
        textNode.position = position
        textNode.scale = SCNVector3(0.05, 0.05, 0.05) // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
        textNode.eulerAngles.x = -.pi / 2 // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –æ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
        
        return textNode
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    func addControlButtons(targetNode: SCNNode) {
        guard let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
              let rootView = windowScene.windows.first?.rootViewController?.view else {
            print("Error: Could not retrieve root view.")
            return
        }
        
        let buttonSize: CGFloat = 60 // –†–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫
        
        // –ö–Ω–æ–ø–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è –≤–ª–µ–≤–æ —Å —Ç–µ–∫—Å—Ç–æ–º
        let leftButton = UIButton(frame: CGRect(x: 20, y: rootView.bounds.height - 120, width: buttonSize, height: buttonSize))
        leftButton.setTitle("‚óÄÔ∏è", for: .normal) // –¢–µ–∫—Å—Ç —Å—Ç—Ä–µ–ª–∫–∏ –≤–ª–µ–≤–æ
        leftButton.titleLabel?.font = UIFont.systemFont(ofSize: 30, weight: .bold) // –ë–æ–ª—å—à–æ–π –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        leftButton.backgroundColor = UIColor.systemGray2.withAlphaComponent(0.7) // –§–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
        leftButton.layer.cornerRadius = buttonSize / 2 // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
        leftButton.addTarget(self, action: #selector(rotateLeft(_:)), for: .touchUpInside)
        rootView.addSubview(leftButton)
        
        // –ö–Ω–æ–ø–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è –≤–ø—Ä–∞–≤–æ —Å —Ç–µ–∫—Å—Ç–æ–º
        let rightButton = UIButton(frame: CGRect(x: 110, y: rootView.bounds.height - 120, width: buttonSize, height: buttonSize))
        rightButton.setTitle("‚ñ∂Ô∏è", for: .normal) // –¢–µ–∫—Å—Ç —Å—Ç—Ä–µ–ª–∫–∏ –≤–ø—Ä–∞–≤–æ
        rightButton.titleLabel?.font = UIFont.systemFont(ofSize: 30, weight: .bold) // –ë–æ–ª—å—à–æ–π –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        rightButton.backgroundColor = UIColor.systemGray2.withAlphaComponent(0.7) // –§–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
        rightButton.layer.cornerRadius = buttonSize / 2 // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
        rightButton.addTarget(self, action: #selector(rotateRight(_:)), for: .touchUpInside)
        rootView.addSubview(rightButton)
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∞–π—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
        let infoButton = UIButton(frame: CGRect(x: rootView.bounds.width - 90, y: rootView.bounds.height - 120, width: buttonSize, height: buttonSize))
        infoButton.setTitle("üåç", for: .normal) // –¢–µ–∫—Å—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        infoButton.titleLabel?.font = UIFont.systemFont(ofSize: 30, weight: .bold) // –ë–æ–ª—å—à–æ–π –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        infoButton.backgroundColor = UIColor.systemGray2.withAlphaComponent(0.7) // –§–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
        infoButton.layer.cornerRadius = buttonSize / 2 // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
        infoButton.addTarget(self, action: #selector(openInfo(_:)), for: .touchUpInside)
        rootView.addSubview(infoButton)
        
        // –ö–Ω–æ–ø–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±—ä–µ–∫—Ç–µ (Popup) —Å —Ç–µ–∫—Å—Ç–æ–º
        let infoPopupButton = UIButton(frame: CGRect(x: rootView.bounds.width - 180, y: rootView.bounds.height - 120, width: buttonSize, height: buttonSize))
        infoPopupButton.setTitle("‚ÑπÔ∏è", for: .normal) // –¢–µ–∫—Å—Ç –¥–ª—è Popup
        infoPopupButton.titleLabel?.font = UIFont.systemFont(ofSize: 30, weight: .bold) // –ë–æ–ª—å—à–æ–π –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        infoPopupButton.backgroundColor = UIColor.systemGray2.withAlphaComponent(0.7) // –§–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
        infoPopupButton.layer.cornerRadius = buttonSize / 2 // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
        infoPopupButton.addTarget(self, action: #selector(showPopupInfo(_:)), for: .touchUpInside)
        rootView.addSubview(infoPopupButton)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–∑–µ–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö –∫–Ω–æ–ø–æ–∫
        controlButtons = [leftButton, rightButton, infoButton, infoPopupButton]
    }
        
    @objc private func rotateLeft(_ sender: UIButton) {
        guard let targetNode = currentTargetNode else { return }
        let rotateAction = SCNAction.rotateBy(x: 0, y: 0, z: CGFloat.pi / 8, duration: 0.2)
        targetNode.runAction(rotateAction)
    }
    
    @objc private func rotateRight(_ sender: UIButton) {
        guard let targetNode = currentTargetNode else { return }
        let rotateAction = SCNAction.rotateBy(x: 0, y: 0, z: -CGFloat.pi / 8, duration: 0.2)
        targetNode.runAction(rotateAction)
    }
    
    @objc private func openInfo(_ sender: UIButton) {
        if let url = URL(string: "https://en.wikipedia.org/wiki/Orange_(fruit)") {
            UIApplication.shared.open(url)
        }
    }
    
    // –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ Popup –æ–∫–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    @objc private func showPopupInfo(_ sender: UIButton) {
        let alertController = UIAlertController(title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ", message: "–≠—Ç–æ 3D-–æ–±—ä–µ–∫—Ç, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –∞–ø–µ–ª—å—Å–∏–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤—Ä–∞—â–∞—Ç—å –µ–≥–æ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –Ω–∏–º.", preferredStyle: .alert)
        
        // –ö–Ω–æ–ø–∫–∞ "–û–ö" –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        alertController.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º alert
        if let rootViewController = UIApplication.shared.windows.first?.rootViewController {
            rootViewController.present(alertController, animated: true, completion: nil)
        }
        
    }
}
